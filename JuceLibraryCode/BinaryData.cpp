/* ==================================== JUCER_BINARY_RESOURCE ====================================

   This is an auto-generated file: Any edits you make may be overwritten!

*/

#include <cstring>

namespace BinaryData
{

//================== austrianAudioLogo.svg ==================
static const unsigned char temp_binary_data_0[] =
"<svg width=\"210\" height=\"39\" viewBox=\"0 0 210 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<g clip-path=\"url(#clip0_286_13274)\">\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M30.5695 27.9944C30.6293 28.1075 30.6547 28.273 30.5886 28.3826C30.5225 28.4922 30.3747 28.5304 30.2463 28.5304H25.405C25.2356 28.5304 25.0871 28.4293 25.0111 28.278C24.416 27.0977 21.7969 21.5 20"
".1428 18.2165C19.866 17.6674 19.6602 17.4206 19.1259 17.4199C18.5916 17.4195 18.3784 17.6384 18.1076 18.214C16.4573 21.7185 13.8022 27.0634 13.2128 28.2797C13.1392 28.4314 12.989 28.5304 12.8207 28.5304H8.08855C7.94923 28.5304 7.77562 28.5021 7.70349"
" 28.3826C7.63171 28.2631 7.67237 28.0704 7.73743 27.947C9.11962 25.3318 14.7506 14.6799 16.37 11.6171C16.6348 11.1161 16.951 10.79 17.6359 10.79H20.6262C21.3387 10.79 21.6788 11.1298 21.9518 11.6521C23.5882 14.7789 29.2372 25.4722 30.5695 27.9944Z\" "
"fill=\"white\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.1406 0.150879C29.7045 0.150879 38.2808 8.72723 38.2808 19.2911C38.2808 29.855 29.7045 38.4317 19.1406 38.4317C8.57671 38.4317 0 29.855 0 19.2911C0 8.72723 8.57671 0.150879 19.1406 0.150879ZM16"
".3798 8.06779C16.2341 7.85245 14.9675 6.16829 12.1434 6.23123C5.35726 6.38257 1.89525 13.2079 1.89383 19.2239C1.89171 27.5931 8.33415 36.5216 19.2948 36.4994C30.2724 36.4767 36.3661 27.0875 36.3661 19.2717C36.3661 13.1004 32.978 6.1987 26.4769 6.2496"
"2C23.3377 6.27437 22.0111 7.9663 21.8541 8.17068C21.5765 8.53205 21.3099 8.75552 20.7431 8.75552H17.5257C16.8964 8.75552 16.6658 8.48962 16.3798 8.06779Z\" fill=\"white\"/>\n"
"<path d=\"M47.2635 34.5181V24.6481H51.5475C52.6302 24.6481 53.4655 24.9187 54.0535 25.4601C54.6415 26.0014 54.9355 26.7574 54.9355 27.7281C54.9355 28.6987 54.6415 29.4594 54.0535 30.0101C53.4655 30.5514 52.6302 30.8221 51.5475 30.8221H49.0555V34.5181"
"H47.2635ZM49.0555 29.4081H51.2675C52.5555 29.4081 53.1995 28.8481 53.1995 27.7281C53.1995 26.6174 52.5555 26.0621 51.2675 26.0621H49.0555V29.4081ZM58.8549 34.6581C58.1456 34.6581 57.5296 34.5134 57.0069 34.2241C56.4842 33.9347 56.0782 33.5241 55.7889"
" 32.9921C55.4996 32.4507 55.3549 31.8161 55.3549 31.0881C55.3549 30.3601 55.4996 29.7301 55.7889 29.1981C56.0782 28.6661 56.4842 28.2554 57.0069 27.9661C57.5296 27.6767 58.1456 27.5321 58.8549 27.5321C59.5642 27.5321 60.1802 27.6767 60.7029 27.9661C6"
"1.2256 28.2554 61.6316 28.6661 61.9209 29.1981C62.2102 29.7301 62.3549 30.3601 62.3549 31.0881C62.3549 31.8161 62.2102 32.4507 61.9209 32.9921C61.6316 33.5241 61.2256 33.9347 60.7029 34.2241C60.1802 34.5134 59.5642 34.6581 58.8549 34.6581ZM58.8549 33"
".3281C59.3776 33.3281 59.7976 33.1414 60.1149 32.7681C60.4322 32.3854 60.5909 31.8254 60.5909 31.0881C60.5909 30.3414 60.4322 29.7861 60.1149 29.4221C59.7976 29.0487 59.3776 28.8621 58.8549 28.8621C58.3322 28.8621 57.9122 29.0487 57.5949 29.4221C57.2"
"776 29.7861 57.1189 30.3414 57.1189 31.0881C57.1189 31.8254 57.2776 32.3854 57.5949 32.7681C57.9122 33.1414 58.3322 33.3281 58.8549 33.3281ZM66.0393 34.6581C65.2273 34.6581 64.6253 34.4387 64.2333 34.0001C63.8506 33.5521 63.6593 32.8987 63.6593 32.04"
"01V24.6481H65.4093V31.9561C65.4093 32.7961 65.764 33.2161 66.4733 33.2161C66.576 33.2161 66.6786 33.2114 66.7813 33.2021C66.884 33.1927 66.982 33.1741 67.0753 33.1461L67.0473 34.5321C66.7113 34.6161 66.3753 34.6581 66.0393 34.6581ZM70.244 34.6581C69."
"7493 34.6581 69.306 34.5647 68.914 34.3781C68.5313 34.1821 68.228 33.9207 68.004 33.5941C67.7893 33.2674 67.682 32.8987 67.682 32.4881C67.682 31.9841 67.8127 31.5874 68.074 31.2981C68.3353 30.9994 68.76 30.7847 69.348 30.6541C69.936 30.5234 70.7247 3"
"0.4581 71.714 30.4581H72.204V30.1641C72.204 29.6974 72.1013 29.3614 71.896 29.1561C71.6907 28.9507 71.3453 28.8481 70.86 28.8481C70.4773 28.8481 70.0853 28.9087 69.684 29.0301C69.2827 29.1421 68.8767 29.3194 68.466 29.5621L67.962 28.3721C68.2047 28.2"
"041 68.4893 28.0594 68.816 27.9381C69.152 27.8074 69.502 27.7094 69.866 27.6441C70.2393 27.5694 70.5893 27.5321 70.916 27.5321C71.9147 27.5321 72.6567 27.7654 73.142 28.2321C73.6273 28.6894 73.87 29.4034 73.87 30.3741V34.5181H72.232V33.4261C72.0733 3"
"3.8087 71.8213 34.1121 71.476 34.3361C71.1307 34.5507 70.72 34.6581 70.244 34.6581ZM70.608 33.4541C71.0653 33.4541 71.4433 33.2954 71.742 32.9781C72.05 32.6607 72.204 32.2594 72.204 31.7741V31.4661H71.728C70.8507 31.4661 70.2393 31.5361 69.894 31.676"
"1C69.558 31.8067 69.39 32.0494 69.39 32.4041C69.39 32.7121 69.4973 32.9641 69.712 33.1601C69.9267 33.3561 70.2253 33.4541 70.608 33.4541ZM75.5063 34.5181V27.6721H77.2143V28.8761C77.5503 28.0641 78.2689 27.6161 79.3703 27.5321L79.9023 27.4901L80.0143 "
"28.9741L79.0063 29.0721C77.8583 29.1841 77.2843 29.7721 77.2843 30.8361V34.5181H75.5063ZM81.0167 34.5181V24.6481H84.6847C86.3367 24.6481 87.6107 25.0727 88.5067 25.9221C89.412 26.7714 89.8647 27.9894 89.8647 29.5761C89.8647 31.1534 89.412 32.3714 88."
"5067 33.2301C87.6107 34.0887 86.3367 34.5181 84.6847 34.5181H81.0167ZM82.8087 33.0341H84.5727C86.85 33.0341 87.9887 31.8814 87.9887 29.5761C87.9887 27.2801 86.85 26.1321 84.5727 26.1321H82.8087V33.0341ZM94.7467 34.6581C93.9721 34.6581 93.3047 34.5134"
" 92.7447 34.2241C92.1847 33.9347 91.7507 33.5241 91.4427 32.9921C91.1441 32.4601 90.9947 31.8301 90.9947 31.1021C90.9947 30.3927 91.1394 29.7721 91.4287 29.2401C91.7274 28.7081 92.1334 28.2927 92.6467 27.9941C93.1694 27.6861 93.7621 27.5321 94.4247 2"
"7.5321C95.3954 27.5321 96.1607 27.8401 96.7207 28.4561C97.2901 29.0721 97.5747 29.9121 97.5747 30.9761V31.4941H92.6747C92.8054 32.7167 93.5054 33.3281 94.7747 33.3281C95.1574 33.3281 95.5401 33.2721 95.9227 33.1601C96.3054 33.0387 96.6554 32.8521 96."
"9727 32.6001L97.4627 33.7761C97.1361 34.0467 96.7254 34.2614 96.2307 34.4201C95.7361 34.5787 95.2414 34.6581 94.7467 34.6581ZM94.4947 28.7221C93.9814 28.7221 93.5661 28.8807 93.2487 29.1981C92.9314 29.5154 92.7401 29.9447 92.6747 30.4861H96.1187C96.0"
"814 29.9167 95.9227 29.4827 95.6427 29.1841C95.3721 28.8761 94.9894 28.7221 94.4947 28.7221ZM101.327 34.6581C100.748 34.6581 100.207 34.5881 99.7026 34.4481C99.1986 34.3081 98.7786 34.1074 98.4426 33.8461L98.8906 32.6981C99.236 32.9314 99.6233 33.113"
"4 100.053 33.2441C100.482 33.3654 100.911 33.4261 101.341 33.4261C101.789 33.4261 102.12 33.3514 102.335 33.2021C102.559 33.0434 102.671 32.8381 102.671 32.5861C102.671 32.1941 102.381 31.9421 101.803 31.8301L100.403 31.5641C99.2173 31.3401 98.6246 3"
"0.7241 98.6246 29.7161C98.6246 29.2681 98.746 28.8807 98.9886 28.5541C99.2406 28.2274 99.586 27.9754 100.025 27.7981C100.463 27.6207 100.967 27.5321 101.537 27.5321C102.022 27.5321 102.489 27.6021 102.937 27.7421C103.385 27.8727 103.767 28.0734 104.0"
"85 28.3441L103.609 29.4921C103.338 29.2681 103.011 29.0907 102.629 28.9601C102.255 28.8294 101.896 28.7641 101.551 28.7641C101.093 28.7641 100.753 28.8434 100.529 29.0021C100.314 29.1607 100.207 29.3707 100.207 29.6321C100.207 30.0427 100.473 30.2947"
" 101.005 30.3881L102.405 30.6541C103.011 30.7661 103.469 30.9714 103.777 31.2701C104.094 31.5687 104.253 31.9701 104.253 32.4741C104.253 33.1554 103.987 33.6921 103.455 34.0841C102.923 34.4667 102.213 34.6581 101.327 34.6581ZM105.405 26.2021V24.4941H"
"107.365V26.2021H105.405ZM105.517 34.5181V27.6721H107.267V34.5181H105.517ZM112.137 37.1781C111.502 37.1781 110.905 37.1034 110.345 36.9541C109.794 36.8141 109.309 36.5947 108.889 36.2961L109.393 35.0781C109.785 35.3394 110.205 35.5307 110.653 35.6521C"
"111.101 35.7827 111.549 35.8481 111.997 35.8481C113.248 35.8481 113.873 35.2461 113.873 34.0421V33.1041C113.677 33.4867 113.374 33.7901 112.963 34.0141C112.562 34.2381 112.114 34.3501 111.619 34.3501C111.003 34.3501 110.466 34.2101 110.009 33.9301C10"
"9.552 33.6407 109.197 33.2394 108.945 32.7261C108.693 32.2127 108.567 31.6154 108.567 30.9341C108.567 30.2527 108.693 29.6601 108.945 29.1561C109.197 28.6427 109.552 28.2461 110.009 27.9661C110.466 27.6767 111.003 27.5321 111.619 27.5321C112.132 27.5"
"321 112.59 27.6487 112.991 27.8821C113.392 28.1061 113.686 28.4094 113.873 28.7921V27.6721H115.581V33.8321C115.581 34.9427 115.287 35.7781 114.699 36.3381C114.111 36.8981 113.257 37.1781 112.137 37.1781ZM112.095 33.0201C112.636 33.0201 113.066 32.833"
"4 113.383 32.4601C113.7 32.0867 113.859 31.5781 113.859 30.9341C113.859 30.2901 113.7 29.7861 113.383 29.4221C113.066 29.0487 112.636 28.8621 112.095 28.8621C111.554 28.8621 111.124 29.0487 110.807 29.4221C110.49 29.7861 110.331 30.2901 110.331 30.93"
"41C110.331 31.5781 110.49 32.0867 110.807 32.4601C111.124 32.8334 111.554 33.0201 112.095 33.0201ZM117.254 34.5181V27.6721H118.962V28.7361C119.195 28.3441 119.508 28.0454 119.9 27.8401C120.301 27.6347 120.749 27.5321 121.244 27.5321C122.859 27.5321 1"
"23.666 28.4701 123.666 30.3461V34.5181H121.916V30.4301C121.916 29.8981 121.813 29.5107 121.608 29.2681C121.412 29.0254 121.104 28.9041 120.684 28.9041C120.171 28.9041 119.76 29.0674 119.452 29.3941C119.153 29.7114 119.004 30.1361 119.004 30.6681V34.5"
"181H117.254ZM128.678 34.6581C127.903 34.6581 127.236 34.5134 126.676 34.2241C126.116 33.9347 125.682 33.5241 125.374 32.9921C125.075 32.4601 124.926 31.8301 124.926 31.1021C124.926 30.3927 125.07 29.7721 125.36 29.2401C125.658 28.7081 126.064 28.2927"
" 126.578 27.9941C127.1 27.6861 127.693 27.5321 128.356 27.5321C129.326 27.5321 130.092 27.8401 130.652 28.4561C131.221 29.0721 131.506 29.9121 131.506 30.9761V31.4941H126.606C126.736 32.7167 127.436 33.3281 128.706 33.3281C129.088 33.3281 129.471 33."
"2721 129.854 33.1601C130.236 33.0387 130.586 32.8521 130.904 32.6001L131.394 33.7761C131.067 34.0467 130.656 34.2614 130.162 34.4201C129.667 34.5787 129.172 34.6581 128.678 34.6581ZM128.426 28.7221C127.912 28.7221 127.497 28.8807 127.18 29.1981C126.8"
"62 29.5154 126.671 29.9447 126.606 30.4861H130.05C130.012 29.9167 129.854 29.4827 129.574 29.1841C129.303 28.8761 128.92 28.7221 128.426 28.7221ZM132.751 34.5181V27.6721H134.459V28.8761C134.795 28.0641 135.514 27.6161 136.615 27.5321L137.147 27.4901L"
"137.259 28.9741L136.251 29.0721C135.103 29.1841 134.529 29.7721 134.529 30.8361V34.5181H132.751Z\" fill=\"white\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.2963 16.8311H55.2562C55.2562 16.8311 53.3719 11.6812 52.57 9.49342C52.5157 9.34436 52.3743 9.24575 52.2161 9.24575C52.0578 9.24498 51.9164 9.34436 51.8621 9.49266C51.0564 11.6804 49.1607 16.83"
"11 49.1607 16.8311H46.1855C46.1855 16.8311 49.7776 8.26729 50.7155 6.03212C50.8493 5.71259 51.1627 5.50391 51.5097 5.50391H52.9965C53.3573 5.50391 53.683 5.721 53.8213 6.05429C54.7631 8.32309 58.2963 16.8311 58.2963 16.8311Z\" fill=\"white\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M114.323 16.7787H111.312C111.312 16.7787 109.443 11.6762 108.65 9.50751C108.596 9.36074 108.456 9.26213 108.299 9.26213C108.142 9.26213 108.002 9.35997 107.948 9.50674C107.15 11.6754 105.272 16.77"
"87 105.272 16.7787H102.323C102.323 16.7787 105.847 8.37769 106.798 6.11271C106.939 5.77484 107.269 5.55469 107.635 5.55469H109.093C109.438 5.55469 109.749 5.76261 109.881 6.08061C110.802 8.29895 114.323 16.7787 114.323 16.7787Z\" fill=\"white\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M68.1987 12.557C68.1987 13.2335 68.0848 13.8489 67.8578 14.4039C67.6307 14.9588 67.3059 15.4343 66.8831 15.831C66.4604 16.227 65.9505 16.5358 65.3535 16.7583C64.7565 16.98 64.093 17.0908 63.3637 1"
"7.0908C62.6238 17.0908 61.958 16.98 61.3663 16.7583C60.7746 16.5358 60.2724 16.227 59.8604 15.831C59.4484 15.4343 59.1311 14.9588 58.9095 14.4039C58.6878 13.8489 58.5762 13.2335 58.5762 12.557V5.56641H61.2715V12.3353C61.2715 12.6419 61.3113 12.9324 6"
"1.39 13.2068C61.4695 13.482 61.591 13.7274 61.7546 13.9445C61.9182 14.1608 62.1353 14.3328 62.4044 14.4597C62.6742 14.5866 62.9991 14.65 63.3798 14.65C63.7605 14.65 64.0854 14.5866 64.3544 14.4597C64.6243 14.3328 64.8437 14.1608 65.0126 13.9445C65.18"
"15 13.7274 65.3031 13.482 65.3772 13.2068C65.4514 12.9324 65.4881 12.6419 65.4881 12.3353V5.56641H68.1987V12.557Z\" fill=\"white\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M83.8656 7.88107V16.7904H81.1549V7.88107H77.9849V5.56641H87.0364V7.88107H83.8656Z\" fill=\"white\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M94.2915 16.7904L91.866 12.3354H90.9464V16.7904H88.2832V5.56641H92.564C93.1029 5.56641 93.628 5.62221 94.141 5.73305C94.6539 5.84389 95.1133 6.03194 95.52 6.29567C95.9274 6.56016 96.2515 6.90873 9"
"6.4954 7.34215C96.7377 7.77558 96.86 8.3145 96.86 8.95891C96.86 9.72027 96.6536 10.3593 96.2416 10.8776C95.8296 11.3951 95.2585 11.7651 94.5293 11.9868L97.4624 16.7904H94.2915ZM94.1807 9.00706C94.1807 8.74257 94.1249 8.52854 94.0141 8.36495C93.9032 8"
".2006 93.7603 8.07371 93.586 7.98427C93.4117 7.89483 93.216 7.83368 92.9997 7.80234C92.7826 7.77023 92.5739 7.75418 92.3736 7.75418H90.9312V10.37H92.2146C92.4371 10.37 92.6641 10.3517 92.8965 10.3142C93.1289 10.2775 93.3406 10.2118 93.531 10.1162C93."
"7213 10.0215 93.8765 9.88386 93.998 9.70422C94.1196 9.52458 94.1807 9.29219 94.1807 9.00706Z\" fill=\"white\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M98.6367 16.7904H101.363V5.56641H98.6367V16.7904Z\" fill=\"white\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M122.22 16.7904L117.703 9.45043H117.655L117.719 16.7904H115.087V5.56641H118.178L122.68 12.8903H122.728L122.665 5.56641H125.296V16.7904H122.22Z\" fill=\"white\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M75.8127 8.18758C75.5497 8.00641 75.3494 7.90551 75.075 7.77785C74.6997 7.60356 74.3381 7.51641 73.9895 7.51641C73.8091 7.51641 73.6272 7.53247 73.4422 7.56381C73.2572 7.59592 73.0906 7.6563 72.94"
"3 7.74574C72.7947 7.83594 72.6709 7.95214 72.57 8.09508C72.4698 8.23803 72.4194 8.41996 72.4194 8.64164C72.4194 8.83198 72.4591 8.99022 72.5386 9.11711C72.6181 9.24401 72.7343 9.35484 72.8872 9.4504C73.0409 9.54518 73.2228 9.63233 73.4345 9.71183C73."
"6455 9.79133 73.8833 9.87312 74.1477 9.95797C74.5284 10.0849 74.9244 10.224 75.3364 10.3776C75.7484 10.5305 76.1238 10.7346 76.4616 10.9876C76.8003 11.2414 77.0801 11.5564 77.3025 11.9309C77.5242 12.3063 77.635 12.7741 77.635 13.3344C77.635 13.9788 7"
"7.5158 14.5361 77.278 15.007C77.0403 15.4763 76.7208 15.8654 76.3195 16.1712C75.9181 16.4785 75.458 16.7055 74.9404 16.853C74.4222 17.0013 73.8886 17.0755 73.339 17.0755C72.5363 17.0755 71.9294 16.9249 71.285 16.7292C70.6826 16.5465 70.0122 16.2614 6"
"9.481 15.9403L70.4128 13.7197C70.7048 13.9934 71.2414 14.3052 71.7039 14.5048C72.2206 14.7272 72.8949 14.8403 73.339 14.8403C73.54 14.8403 73.7357 14.8189 73.9261 14.7769C74.1156 14.7341 74.2823 14.666 74.4252 14.5705C74.5674 14.4757 74.6813 14.3488 "
"74.7662 14.1898C74.8502 14.0316 74.8923 13.8412 74.8923 13.6195C74.8923 13.4078 74.8403 13.2282 74.7341 13.0806C74.6286 12.9323 74.478 12.7978 74.2823 12.6763C74.0866 12.5547 73.8443 12.4439 73.553 12.3437C73.2625 12.2428 72.9323 12.135 72.5623 12.01"
"81C72.2031 11.9019 71.8514 11.7651 71.5082 11.6061C71.165 11.4478 70.8584 11.2445 70.5886 10.9961C70.3195 10.7476 70.1024 10.4464 69.9388 10.0925C69.7753 9.73859 69.6935 9.30745 69.6935 8.79988C69.6935 8.17687 69.8204 7.64331 70.0734 7.19918C70.3272 "
"6.75581 70.6605 6.39119 71.0725 6.10529C71.4845 5.82016 71.9493 5.61148 72.4675 5.47923C72.9851 5.34699 73.5079 5.28125 74.0369 5.28125C74.6706 5.28125 75.3181 5.39744 75.9785 5.62983C76.2476 5.72461 76.5029 5.83775 76.7452 5.96923L75.8127 8.18758Z\""
" fill=\"white\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M143.147 16.8483H140.099C140.099 16.8483 138.208 11.6839 137.405 9.48926C137.35 9.3402 137.209 9.24083 137.05 9.24083C136.891 9.24083 136.749 9.33943 136.694 9.4885C135.887 11.6831 133.986 16.8483"
" 133.986 16.8483H131.001C131.001 16.8483 134.556 8.37397 135.525 6.06389C135.671 5.71455 136.012 5.48828 136.391 5.48828H137.789C138.177 5.48828 138.527 5.72143 138.676 6.07994C139.645 8.41372 143.147 16.8483 143.147 16.8483Z\" fill=\"white\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M153.179 12.557C153.179 13.2335 153.065 13.8489 152.838 14.4039C152.611 14.9588 152.286 15.4343 151.864 15.831C151.441 16.227 150.931 16.5358 150.334 16.7583C149.737 16.98 149.073 17.0908 148.344 "
"17.0908C147.604 17.0908 146.938 16.98 146.347 16.7583C145.755 16.5358 145.253 16.227 144.841 15.831C144.429 15.4343 144.112 14.9588 143.89 14.4039C143.667 13.8489 143.557 13.2335 143.557 12.557V5.56641H146.252V12.3353C146.252 12.6419 146.292 12.9324 "
"146.37 13.2068C146.45 13.482 146.572 13.7274 146.735 13.9445C146.899 14.1608 147.116 14.3328 147.385 14.4597C147.655 14.5866 147.98 14.65 148.36 14.65C148.741 14.65 149.065 14.5866 149.335 14.4597C149.605 14.3328 149.824 14.1608 149.993 13.9445C150.1"
"62 13.7274 150.284 13.482 150.358 13.2068C150.432 12.9324 150.469 12.6419 150.469 12.3353V5.56641H153.179V12.557Z\" fill=\"white\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M165.516 11.1467C165.516 12.1297 165.333 12.9775 164.968 13.6907C164.604 14.4039 164.123 14.991 163.526 15.4504C162.929 15.9106 162.256 16.2484 161.505 16.4648C160.755 16.6818 159.994 16.7904 159."
"222 16.7904H155.037V5.56641H159.095C159.888 5.56641 160.67 5.6589 161.441 5.84389C162.213 6.02888 162.9 6.33542 163.502 6.76349C164.105 7.19157 164.591 7.76488 164.961 8.48344C165.331 9.20199 165.516 10.0895 165.516 11.1467ZM162.694 11.1467C162.694 1"
"0.513 162.591 9.98629 162.385 9.56968C162.178 9.15154 161.904 8.81902 161.561 8.57058C161.217 8.32214 160.826 8.14556 160.387 8.03931C159.949 7.93382 159.497 7.88107 159.032 7.88107H157.684V14.4436H158.969C159.455 14.4436 159.923 14.3886 160.372 14.2"
"777C160.821 14.1661 161.217 13.9842 161.561 13.7304C161.904 13.4774 162.178 13.1388 162.385 12.716C162.591 12.2933 162.694 11.7697 162.694 11.1467Z\" fill=\"white\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M167.149 16.7904H169.876V5.56641H167.149V16.7904Z\" fill=\"white\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M183.731 11.131C183.731 12.0185 183.578 12.8303 183.271 13.5642C182.965 14.2988 182.539 14.9271 181.995 15.4508C181.451 15.9736 180.804 16.378 180.053 16.6631C179.303 16.949 178.489 17.0912 177.61"
"2 17.0912C176.735 17.0912 175.924 16.949 175.178 16.6631C174.433 16.378 173.789 15.9736 173.245 15.4508C172.7 14.9271 172.275 14.2988 171.969 13.5642C171.662 12.8303 171.509 12.0185 171.509 11.131C171.509 10.2328 171.662 9.42178 171.969 8.69788C172.2"
"75 7.97397 172.7 7.35861 173.245 6.85104C173.789 6.34346 174.433 5.95284 175.178 5.67765C175.924 5.40322 176.735 5.26562 177.612 5.26562C178.489 5.26562 179.303 5.40322 180.053 5.67765C180.804 5.95284 181.451 6.34346 181.995 6.85104C182.539 7.35861 1"
"82.965 7.97397 183.271 8.69788C183.578 9.42178 183.731 10.2328 183.731 11.131ZM180.83 11.131C180.83 10.6449 180.75 10.19 180.592 9.7673C180.434 9.34534 180.215 8.983 179.935 8.68182C179.654 8.38064 179.316 8.14291 178.92 7.96862C178.524 7.79433 178.0"
"88 7.70719 177.612 7.70719C177.136 7.70719 176.703 7.79433 176.312 7.96862C175.921 8.14291 175.583 8.38064 175.298 8.68182C175.013 8.983 174.793 9.34534 174.64 9.7673C174.486 10.19 174.41 10.6449 174.41 11.131C174.41 11.6386 174.489 12.1057 174.648 1"
"2.5337C174.806 12.9618 175.026 13.3287 175.305 13.636C175.585 13.9418 175.921 14.1826 176.312 14.3569C176.703 14.5312 177.136 14.6183 177.612 14.6183C178.088 14.6183 178.521 14.5312 178.912 14.3569C179.303 14.1826 179.641 13.9418 179.926 13.636C180.2"
"11 13.3287 180.434 12.9618 180.592 12.5337C180.75 12.1057 180.83 11.6386 180.83 11.131Z\" fill=\"white\"/>\n"
"</g>\n"
"<defs>\n"
"<clipPath id=\"clip0_286_13274\">\n"
"<rect width=\"210\" height=\"39\" fill=\"white\" transform=\"translate(0 0.0820312)\"/>\n"
"</clipPath>\n"
"</defs>\n"
"</svg>\n";

const char* austrianAudioLogo_svg = (const char*) temp_binary_data_0;

//================== bandHandleKnob.svg ==================
static const unsigned char temp_binary_data_1[] =
"<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<circle cx=\"13.4648\" cy=\"12.6211\" r=\"12.5\" fill=\"#343639\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.15313 16.3094C9.40418 16.0583 9.81122 16.0583 10.0623 16.3094L13.4648 19.712L16.8674 16.3094C17.1185 16.0583 17.5255 16.0583 17.7766 16.3094C18.0276 16.5604 18.0276 16.9675 17.7766 17.2185L13.9"
"194 21.0757C13.6684 21.3267 13.2613 21.3267 13.0103 21.0757L9.15313 17.2185C8.90208 16.9675 8.90208 16.5604 9.15313 16.3094Z\" fill=\"white\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.7766 9.64765C17.5255 9.8987 17.1185 9.8987 16.8674 9.64765L13.4648 6.24507L10.0623 9.64765C9.81122 9.8987 9.40418 9.8987 9.15313 9.64765C8.90208 9.3966 8.90208 8.98956 9.15313 8.73851L13.0103 "
"4.88137C13.2613 4.63032 13.6684 4.63032 13.9194 4.88137L17.7766 8.73851C18.0276 8.98956 18.0276 9.3966 17.7766 9.64765Z\" fill=\"white\"/>\n"
"</svg>\n";

const char* bandHandleKnob_svg = (const char*) temp_binary_data_1;

//================== bCardioidPatternIcon.svg ==================
static const unsigned char temp_binary_data_2[] =
"<svg width=\"20\" height=\"17\" viewBox=\"0 0 20 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<path d=\"M10.443 15.4378L10.234 15.355L10.0333 15.4564C8.42226 16.2708 7.07028 16.5568 5.95805 16.4909C4.85276 16.4254 3.95417 16.011 3.23862 15.369C1.78893 14.0681 1.05291 11.789 1.05291 9.51299C1.05291 5.13007 5.11259 1.47175 10.2589 1.47175C15.40"
"52 1.47175 19.4648 5.13007 19.4648 9.51299C19.4648 11.8146 18.8731 13.9601 17.5132 15.1896C16.1951 16.3812 13.9964 16.8449 10.443 15.4378Z\" stroke=\"white\"/>\n"
"</svg>\n";

const char* bCardioidPatternIcon_svg = (const char*) temp_binary_data_2;

//================== cardioidPatternIcon.svg ==================
static const unsigned char temp_binary_data_3[] =
"<svg width=\"23\" height=\"16\" viewBox=\"0 0 23 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<path d=\"M12.0884 11.7208L11.6306 10.9717L11.2199 11.7476C10.295 13.4945 9.22019 14.4708 8.16883 14.9207C7.12247 15.3685 6.04579 15.3185 5.05884 14.9129C3.05504 14.0894 1.46415 11.8128 1.46415 9.41413C1.46415 4.54926 5.9678 0.500229 11.6618 0.500229"
"C17.3557 0.500229 21.8594 4.54926 21.8594 9.41413C21.8594 11.8521 20.4468 14.2212 18.5676 15.0812C17.6464 15.5028 16.6038 15.5695 15.5167 15.1016C14.4175 14.6286 13.2306 13.59 12.0884 11.7208Z\" stroke=\"white\"/>\n"
"</svg>\n";

const char* cardioidPatternIcon_svg = (const char*) temp_binary_data_3;

//================== closePresetListIcon.svg ==================
static const unsigned char temp_binary_data_4[] =
"<svg width=\"17\" height=\"17\" viewBox=\"0 0 17 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<path d=\"M1.76611 1.75391L15.2661 15.2539\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n"
"<path d=\"M1.24707 15.207L14.7768 1.73683\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n"
"</svg>\n";

const char* closePresetListIcon_svg = (const char*) temp_binary_data_4;

//================== diffuseField.svg ==================
static const unsigned char temp_binary_data_5[] =
"<svg width=\"67\" height=\"64\" viewBox=\"0 0 67 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<circle cx=\"32\" cy=\"32\" r=\"31.5\" stroke=\"white\"/>\n"
"<path d=\"M0.717041 25.9524C2.23708 28.0816 3.80841 30.1452 6.65544 30.2238C12.824 30.3941 13.4848 21.1979 19.6555 21.2412C25.7643 21.2841 26.3546 30.1041 32.4624 30.2238C38.747 30.3469 39.548 20.8028 45.8184 21.2412C51.5122 21.6393 51.6489 29.9079 5"
"7.3478 30.2238C60.0905 30.3758 61.74 28.5393 63.2723 26.4874\" stroke=\"white\"/>\n"
"<path d=\"M1.32861 40.0764C2.67724 41.8782 4.18677 43.4388 6.65549 43.507C12.824 43.6773 13.4848 34.4811 19.6555 34.5244C25.7644 34.5673 26.3547 43.3873 32.4625 43.507C38.747 43.6301 39.548 34.086 45.8185 34.5244C51.5123 34.9225 51.6489 43.1911 57.34"
"79 43.507C59.7077 43.6378 61.2583 42.2965 62.6212 40.6124\" stroke=\"white\"/>\n"
"<path d=\"M10.521 55.3696C13.5323 52.8283 15.0777 47.7755 19.6555 47.8076C25.7643 47.8505 26.3546 56.6705 32.4624 56.7902C38.7469 56.9133 39.548 47.3692 45.8184 47.8076C49.9802 48.0986 51.173 52.5944 53.739 55.1161\" stroke=\"white\"/>\n"
"<path d=\"M4.41431 16.3906C5.06942 16.7168 5.80564 16.9171 6.65556 16.9406C12.8241 17.1109 13.4849 7.91471 19.6556 7.95801C25.7644 8.00088 26.3547 16.8209 32.4626 16.9406C38.7471 17.0637 39.5481 7.51962 45.8185 7.95801C51.5124 8.3561 51.649 16.6247 5"
"7.348 16.9406C58.2564 16.9909 59.0449 16.8231 59.749 16.5016\" stroke=\"white\"/>\n"
"<path d=\"M56.9266 58.9988L56.4689 58.2497L56.0581 59.0256C55.1511 60.7388 54.0975 61.6953 53.068 62.1359C52.0435 62.5743 50.9893 62.5255 50.0226 62.1282C48.0593 61.3213 46.5 59.0902 46.5 56.7395C46.5 51.9707 50.9152 47.9995 56.5 47.9995C62.0848 47.9"
"995 66.5 51.9707 66.5 56.7395C66.5 59.1295 65.1151 61.4511 63.2744 62.2935C62.3725 62.7063 61.3519 62.7716 60.2873 62.3135C59.2108 61.8502 58.0471 60.8323 56.9266 58.9988Z\" fill=\"#1C1E21\" stroke=\"white\"/>\n"
"</svg>\n";

const char* diffuseField_svg = (const char*) temp_binary_data_5;

//================== eightPatternIcon.svg ==================
static const unsigned char temp_binary_data_6[] =
"<svg width=\"16\" height=\"20\" viewBox=\"0 0 16 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<path d=\"M15.4648 4.94392C15.4648 6.0873 14.7616 7.18608 13.493 8.02234C12.2284 8.85595 10.4521 9.38784 8.46484 9.38784C6.47759 9.38784 4.70132 8.85595 3.43673 8.02234C2.16811 7.18608 1.46484 6.0873 1.46484 4.94392C1.46484 3.80054 2.16811 2.70176 3."
"43673 1.8655C4.70132 1.03189 6.47759 0.5 8.46484 0.5C10.4521 0.5 12.2284 1.03189 13.493 1.8655C14.7616 2.70176 15.4648 3.80054 15.4648 4.94392Z\" stroke=\"white\"/>\n"
"<path d=\"M15.4648 14.6063C15.4648 15.8937 14.7401 17.1052 13.4762 18.014C12.2132 18.9223 10.443 19.4996 8.46484 19.4996C6.48672 19.4996 4.71653 18.9223 3.45346 18.014C2.18961 17.1052 1.46484 15.8937 1.46484 14.6063C1.46484 13.3188 2.18961 12.1074 3."
"45346 11.1985C4.71653 10.2902 6.48672 9.71289 8.46484 9.71289C10.443 9.71289 12.2132 10.2902 13.4762 11.1985C14.7401 12.1074 15.4648 13.3188 15.4648 14.6063Z\" stroke=\"white\"/>\n"
"</svg>\n";

const char* eightPatternIcon_svg = (const char*) temp_binary_data_6;

//================== eqFieldCheckSign.svg ==================
static const unsigned char temp_binary_data_7[] =
"<svg width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<circle cx=\"9.5\" cy=\"9.94531\" r=\"8.25\" fill=\"#B61616\" stroke=\"#B61616\" stroke-width=\"1.5\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.8641 6.58079C14.0597 6.7764 14.0597 7.09354 13.8641 7.28915L8.35436 12.7989C8.15875 12.9945 7.84161 12.9945 7.646 12.7989L5.14158 10.2945C4.94597 10.0988 4.94597 9.78171 5.14158 9.5861C5.33719"
" 9.39049 5.65433 9.39049 5.84994 9.5861L8.00018 11.7363L13.1557 6.58079C13.3513 6.38518 13.6685 6.38518 13.8641 6.58079Z\" fill=\"white\"/>\n"
"</svg>\n";

const char* eqFieldCheckSign_svg = (const char*) temp_binary_data_7;

//================== eyeDrop.svg ==================
static const unsigned char temp_binary_data_8[] =
"<svg width=\"24\" height=\"22\" viewBox=\"0 0 24 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.9638 20.2381C16.7346 20.3585 16.5842 20.5925 16.5842 20.8514C16.5842 21.3268 17.066 21.6485 17.4887 21.4307C21.1422 19.5482 23.6406 15.7387 23.6406 11.3457C23.6406 5.08396 18.5645 0.0078125 12"
".3027 0.0078125C6.04099 0.0078125 0.964844 5.08396 0.964844 11.3457C0.964844 15.7386 3.46314 19.548 7.11642 21.4305C7.53908 21.6483 8.02092 21.3267 8.02092 20.8512C8.02092 20.5923 7.87057 20.3583 7.64137 20.2379C4.44494 18.5589 2.26484 15.2069 2.2648"
"4 11.3457C2.26484 5.80193 6.75896 1.30781 12.3027 1.30781C17.8465 1.30781 22.3406 5.80193 22.3406 11.3457C22.3406 15.207 20.1604 18.5591 16.9638 20.2381ZM15.6895 17.1848C15.4687 17.3144 15.3231 17.5462 15.3231 17.8022C15.3231 18.2847 15.8122 18.61 16"
".2322 18.3726C18.6613 16.9998 20.301 14.3936 20.301 11.4045C20.301 6.98711 16.72 3.40611 12.3026 3.40611C7.88523 3.40611 4.30423 6.98711 4.30423 11.4045C4.30423 14.3937 5.94397 16.9998 8.37302 18.3726C8.79305 18.61 9.28212 18.2847 9.28212 17.8022C9.2"
"8212 17.5462 9.13653 17.3144 8.91574 17.1848C6.93439 16.0213 5.60423 13.8683 5.60423 11.4045C5.60423 7.70508 8.6032 4.70611 12.3026 4.70611C16.002 4.70611 19.001 7.70508 19.001 11.4045C19.001 13.8682 17.6709 16.0213 15.6895 17.1848ZM13.9357 14.1192C1"
"3.9357 13.8751 14.064 13.6524 14.2507 13.495C14.909 12.9402 15.3272 12.1096 15.3272 11.1813C15.3272 9.51081 13.973 8.15662 12.3025 8.15662C10.632 8.15662 9.27786 9.51081 9.27786 11.1813C9.27786 12.1096 9.69609 12.9403 10.3544 13.4951C10.5411 13.6524 "
"10.6694 13.8752 10.6694 14.1193C10.6694 14.629 10.151 14.968 9.74062 14.6658C8.67152 13.8784 7.97786 12.6109 7.97786 11.1813C7.97786 8.79283 9.91407 6.85662 12.3025 6.85662C14.6909 6.85662 16.6272 8.79283 16.6272 11.1813C16.6272 12.6108 15.9335 13.87"
"83 14.8645 14.6657C14.4541 14.968 13.9357 14.6289 13.9357 14.1192ZM12.3025 11.8692C12.8244 11.8692 13.2474 11.4462 13.2474 10.9244C13.2474 10.4026 12.8244 9.97957 12.3025 9.97957C11.7807 9.97957 11.3577 10.4026 11.3577 10.9244C11.3577 11.4462 11.7807"
" 11.8692 12.3025 11.8692Z\" fill=\"white\"/>\n"
"</svg>\n";

const char* eyeDrop_svg = (const char*) temp_binary_data_8;

//================== freeField.svg ==================
static const unsigned char temp_binary_data_9[] =
"<svg width=\"67\" height=\"64\" viewBox=\"0 0 67 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<circle cx=\"32\" cy=\"32\" r=\"31.5\" stroke=\"white\"/>\n"
"<path d=\"M0.5 36.5H63.4343\" stroke=\"white\"/>\n"
"<path d=\"M0.5 28.5L63.5 28.5\" stroke=\"white\"/>\n"
"<path d=\"M2.5 20.5L61.6208 20.5\" stroke=\"white\"/>\n"
"<path d=\"M7 12.5L57 12.5\" stroke=\"white\"/>\n"
"<path d=\"M17.9039 60.5H46.0001\" stroke=\"white\"/>\n"
"<path d=\"M7.75934 52.5H56.2434\" stroke=\"white\"/>\n"
"<path d=\"M16.0001 4.5L47.8319 4.5\" stroke=\"white\"/>\n"
"<path d=\"M2.91095 44.5H61.189\" stroke=\"white\"/>\n"
"<path d=\"M56.9266 58.9988L56.4689 58.2497L56.0581 59.0256C55.1511 60.7388 54.0975 61.6953 53.068 62.1359C52.0435 62.5743 50.9893 62.5255 50.0226 62.1282C48.0593 61.3213 46.5 59.0902 46.5 56.7395C46.5 51.9707 50.9152 47.9995 56.5 47.9995C62.0848 47.9"
"995 66.5 51.9707 66.5 56.7395C66.5 59.1295 65.1151 61.4511 63.2744 62.2935C62.3725 62.7063 61.3519 62.7716 60.2873 62.3135C59.2108 61.8502 58.0471 60.8323 56.9266 58.9988Z\" fill=\"#1C1E21\" stroke=\"white\"/>\n"
"</svg>\n";

const char* freeField_svg = (const char*) temp_binary_data_9;

//================== hyperCardioidPatternIcon.svg ==================
static const unsigned char temp_binary_data_10[] =
"<svg width=\"17\" height=\"21\" viewBox=\"0 0 17 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<path d=\"M5.74154 14.1577L6.26043 13.1472C6.3735 12.927 6.30236 12.657 6.09547 12.5211L2.71404 10.3001C2.22978 9.98203 1.87155 9.50508 1.70103 8.95136C0.727355 5.78963 2.39608 2.41847 5.5006 1.27546L6.38781 0.948808C8.03985 0.340561 9.86435 0.403084"
" 11.4709 1.123L12.2767 1.4841C15.251 2.81692 16.5672 6.31967 15.2068 9.28137C15.0479 9.62726 14.8072 9.92928 14.5055 10.1613L11.8024 12.2404C11.6082 12.3898 11.5519 12.6585 11.6699 12.8732L12.2845 13.9918C13.2971 15.8348 12.5714 18.1575 10.6988 19.11"
"42C9.61804 19.6663 8.32734 19.6541 7.26067 19.0753C5.50225 18.1211 4.82765 15.9373 5.74154 14.1577Z\" stroke=\"white\"/>\n"
"</svg>\n";

const char* hyperCardioidPatternIcon_svg = (const char*) temp_binary_data_10;

//================== loadArrow.svg ==================
static const unsigned char temp_binary_data_11[] =
"<svg width=\"8\" height=\"14\" viewBox=\"0 0 8 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.292893 13.7071C-0.0976311 13.3166 -0.0976311 12.6834 0.292893 12.2929L5.58579 7L0.292893 1.70711C-0.0976311 1.31658 -0.0976311 0.683417 0.292893 0.292893C0.683417 -0.0976315 1.31658 -0.0976315 "
"1.70711 0.292893L7.70711 6.29289C8.09763 6.68342 8.09763 7.31658 7.70711 7.70711L1.70711 13.7071C1.31658 14.0976 0.683417 14.0976 0.292893 13.7071Z\" fill=\"white\"/>\n"
"</svg>\n";

const char* loadArrow_svg = (const char*) temp_binary_data_11;

//================== maximizeTargetIcon.svg ==================
static const unsigned char temp_binary_data_12[] =
"<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<path d=\"M14.8783 15.312C15.1593 15.3116 15.3868 15.0835 15.3864 14.8025L15.3799 10.2233C15.3795 9.94235 15.1514 9.71487 14.8704 9.71527C14.5894 9.71566 14.3619 9.94378 14.3623 10.2248L14.3681 14.2951L10.2977 14.3009C10.0167 14.3012 9.78922 14.5294 "
"9.78961 14.8104C9.79 15.0914 10.0181 15.3188 10.2991 15.3184L14.8783 15.312ZM0.999286 0.455769C0.718286 0.456163 0.49081 0.684278 0.491205 0.965279L0.497632 5.54444C0.498027 5.82544 0.726142 6.05291 1.00714 6.05252C1.28814 6.05212 1.51562 5.82401 1.5"
"1522 5.54301L1.50951 1.47265L5.57987 1.46693C5.86087 1.46654 6.08835 1.23842 6.08795 0.957422C6.08756 0.676422 5.85944 0.448947 5.57844 0.449341L0.999286 0.455769ZM15.2368 14.4429L1.35927 0.604286L0.640732 1.32484L14.5183 15.1635L15.2368 14.4429Z\" f"
"ill=\"white\"/>\n"
"<path d=\"M0.491205 14.8426C0.491599 15.1236 0.719714 15.3511 1.00071 15.3507L5.57987 15.3443C5.86087 15.3439 6.08835 15.1158 6.08795 14.8348C6.08756 14.5538 5.85944 14.3263 5.57844 14.3267L1.50808 14.3324L1.50237 10.262C1.50197 9.98105 1.27386 9.753"
"57 0.992858 9.75397C0.711858 9.75436 0.484382 9.98247 0.484777 10.2635L0.491205 14.8426ZM15.3475 0.963641C15.3471 0.682641 15.1189 0.455166 14.8379 0.45556L10.2588 0.461988C9.97779 0.462382 9.75031 0.690498 9.7507 0.971497C9.7511 1.2525 9.97921 1.479"
"97 10.2602 1.47958L14.3306 1.47387L14.3363 5.54423C14.3367 5.82523 14.5648 6.0527 14.8458 6.05231C15.1268 6.05192 15.3543 5.8238 15.3539 5.5428L15.3475 0.963641ZM1.36028 15.2012L15.1989 1.32362L14.4784 0.605088L0.639722 14.4827L1.36028 15.2012Z\" fil"
"l=\"white\"/>\n"
"</svg>\n";

const char* maximizeTargetIcon_svg = (const char*) temp_binary_data_12;

//================== maxTargetToSpillIcon.svg ==================
static const unsigned char temp_binary_data_13[] =
"<svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<path d=\"M1 3.12135L2.57092 5.08501C2.64606 5.17893 2.79182 5.16913 2.8537 5.06599L5.31497 0.963867\" stroke=\"white\" stroke-linecap=\"round\"/>\n"
"<path d=\"M8.33252 3.12134H16.8861\" stroke=\"white\" stroke-linecap=\"round\"/>\n"
"<path d=\"M1 9.011L2.57092 10.9747C2.64606 11.0686 2.79182 11.0588 2.8537 10.9556L5.31497 6.85352\" stroke=\"white\" stroke-linecap=\"round\"/>\n"
"<path d=\"M8.33252 9.01099H16.8861\" stroke=\"white\" stroke-linecap=\"round\"/>\n"
"<path d=\"M1 14.9011L2.57092 16.8648C2.64606 16.9587 2.79182 16.9489 2.8537 16.8458L5.31497 12.7437\" stroke=\"white\" stroke-linecap=\"round\"/>\n"
"<path d=\"M8.33252 14.9011H16.8861\" stroke=\"white\" stroke-linecap=\"round\"/>\n"
"</svg>\n";

const char* maxTargetToSpillIcon_svg = (const char*) temp_binary_data_13;

//================== omniPatternIcon.svg ==================
static const unsigned char temp_binary_data_14[] =
"<svg width=\"21\" height=\"20\" viewBox=\"0 0 21 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<circle cx=\"10.5977\" cy=\"9.63285\" r=\"9.13285\" stroke=\"white\"/>\n"
"</svg>\n";

const char* omniPatternIcon_svg = (const char*) temp_binary_data_14;

//================== revBCardioidPatternIcon.svg ==================
static const unsigned char temp_binary_data_15[] =
"<svg width=\"21\" height=\"17\" viewBox=\"0 0 21 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<path d=\"M10.4867 1.5622L10.6957 1.64497L10.8964 1.54356C12.5074 0.729198 13.8594 0.443209 14.9716 0.509131C16.0769 0.574641 16.9755 0.988971 17.6911 1.63105C19.1408 2.93188 19.8768 5.21096 19.8768 7.48701C19.8768 11.8699 15.8171 15.5283 10.6708 15."
"5283C5.52452 15.5283 1.46484 11.8699 1.46484 7.48701C1.46484 5.18539 2.05655 3.03989 3.41648 1.81042C4.73459 0.618761 6.9333 0.155075 10.4867 1.5622Z\" stroke=\"white\"/>\n"
"</svg>\n";

const char* revBCardioidPatternIcon_svg = (const char*) temp_binary_data_15;

//================== revCardioidPatternIcon.svg ==================
static const unsigned char temp_binary_data_16[] =
"<svg width=\"23\" height=\"16\" viewBox=\"0 0 23 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<path d=\"M11.2358 4.20495L11.6936 4.95404L12.1044 4.17816C13.0292 2.43129 14.104 1.455 15.1554 1.00505C16.2017 0.557238 17.2784 0.607232 18.2654 1.01284C20.2692 1.83634 21.8601 4.11297 21.8601 6.51166C21.8601 11.3765 17.3564 15.4256 11.6625 15.4256C"
"5.9685 15.4256 1.46484 11.3765 1.46484 6.51166C1.46484 4.07364 2.87746 1.70462 4.75663 0.844549C5.6778 0.422943 6.72043 0.356303 7.80757 0.824136C8.90674 1.29715 10.0936 2.33582 11.2358 4.20495Z\" stroke=\"white\"/>\n"
"</svg>\n";

const char* revCardioidPatternIcon_svg = (const char*) temp_binary_data_16;

//================== scrollImage.png ==================
static const unsigned char temp_binary_data_17[] =
{ 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,30,0,0,0,8,8,6,0,0,0,238,191,79,36,0,0,8,205,122,84,88,116,82,97,119,32,112,114,111,102,105,108,101,32,116,121,112,101,32,101,120,105,102,0,0,120,218,173,89,107,122,99,43,14,252,207,42,102,9,8,1,130,
229,240,210,247,205,14,102,249,83,226,96,199,78,210,185,185,109,219,29,159,135,177,84,82,9,84,156,118,235,127,255,85,247,31,188,184,148,226,98,146,146,107,206,30,175,88,99,13,13,39,197,95,175,190,63,201,199,253,121,93,172,243,29,61,223,119,247,31,5,220,
98,28,249,186,172,225,220,95,184,143,115,58,215,245,140,167,219,248,187,161,155,167,134,179,244,241,69,107,231,126,127,190,223,143,193,80,62,27,58,8,152,46,207,126,158,31,28,67,28,14,162,120,93,143,131,40,215,34,79,161,205,113,60,199,115,171,124,252,
69,150,144,83,38,137,248,140,193,139,228,138,243,18,124,20,228,115,26,80,29,161,110,67,233,74,232,253,198,237,250,54,52,0,83,88,76,236,241,201,124,80,178,253,5,110,56,70,124,6,22,135,129,132,1,13,159,130,79,230,176,19,239,65,37,32,0,105,61,142,154,191,
39,243,49,55,31,57,250,195,235,55,97,121,56,81,43,135,248,192,218,253,248,169,110,238,103,159,234,38,198,231,178,185,179,86,242,25,194,207,180,250,124,63,126,123,159,210,205,208,237,11,190,251,15,143,158,203,56,103,225,249,126,157,183,66,121,172,236,
243,167,58,139,238,160,17,69,139,25,185,200,39,168,91,136,251,12,227,186,101,113,255,42,227,45,62,59,84,109,193,137,189,43,222,197,55,63,80,83,211,15,204,180,142,243,74,1,220,43,69,154,212,72,105,237,227,160,1,136,49,172,32,56,134,48,92,224,125,179,128,
164,26,6,91,49,68,123,147,6,225,202,147,11,170,100,236,26,138,28,238,88,104,187,173,219,221,160,226,167,243,147,48,52,16,140,209,46,178,191,124,187,223,14,84,181,185,68,180,167,206,53,157,128,43,236,242,197,93,2,253,118,192,48,48,66,122,146,154,118,130,
111,239,207,47,227,149,193,96,218,105,46,8,176,249,238,46,19,61,209,71,113,241,38,154,49,48,225,120,21,30,201,60,6,0,8,174,19,192,16,131,1,159,137,19,101,32,146,16,132,8,137,44,32,168,1,122,224,24,58,24,160,148,194,4,200,16,153,51,200,193,236,128,111,
252,70,104,15,13,41,92,183,177,170,114,116,156,56,99,186,22,48,212,64,86,140,9,245,35,177,160,134,90,226,20,83,74,57,73,42,169,166,150,57,219,204,203,89,178,45,207,77,88,162,36,201,34,82,156,84,105,133,75,44,169,228,34,88,197,107,105,53,84,198,242,157,
42,230,105,45,181,214,214,224,180,193,114,195,175,27,6,180,214,67,231,30,123,234,185,75,47,189,186,222,6,202,103,196,145,70,30,50,202,168,163,205,48,121,98,130,207,60,101,150,89,103,91,180,80,74,43,174,180,242,146,85,86,93,77,81,106,202,26,53,105,86,
113,90,180,106,187,179,118,104,253,242,254,23,172,209,97,45,108,166,108,160,220,89,195,93,145,155,9,178,229,36,25,103,96,44,68,2,225,2,214,192,24,10,219,56,243,133,98,12,198,156,113,134,126,132,89,145,2,64,38,35,103,146,49,6,6,227,162,144,148,238,220,
29,230,28,178,248,22,222,156,148,205,91,120,149,57,103,212,253,146,185,175,188,125,199,218,180,46,49,54,99,215,52,180,164,122,198,236,235,29,250,160,215,100,157,111,209,159,46,220,159,191,250,119,23,238,69,11,137,16,75,238,186,28,56,80,69,149,43,130,
152,96,112,237,230,173,49,79,74,202,215,79,62,93,137,226,42,41,24,83,41,186,36,45,98,117,138,194,92,93,84,35,149,25,25,246,80,37,48,58,114,241,60,181,245,197,67,169,73,153,60,80,7,184,196,220,240,179,207,174,165,74,170,104,99,165,39,70,104,177,44,46,
75,23,202,37,98,149,185,90,255,180,190,130,142,159,166,140,137,5,30,191,245,117,161,224,211,152,17,75,229,0,148,158,70,93,93,83,211,156,166,119,16,15,136,182,78,148,160,159,156,65,96,31,220,91,156,96,126,142,217,70,226,168,0,149,19,245,81,67,239,40,227,
129,87,18,28,32,240,98,101,220,206,5,75,237,138,22,138,150,184,116,100,178,243,136,84,245,106,103,133,169,34,125,165,53,86,100,162,43,21,100,200,79,105,75,208,0,71,206,54,106,133,214,221,234,199,12,241,128,21,51,19,26,234,123,155,9,203,78,74,221,102,
124,84,143,171,233,81,212,100,125,180,55,186,204,88,58,29,2,215,87,209,24,24,247,14,52,6,198,189,3,141,129,113,239,64,99,96,220,59,208,24,24,247,14,52,6,198,189,3,141,129,113,239,64,99,119,221,59,208,24,24,247,14,52,6,198,189,3,141,129,113,239,64,99,
96,220,59,208,236,100,191,3,141,129,113,239,64,99,96,220,59,208,24,24,247,14,52,6,198,189,3,141,129,113,239,64,99,96,220,63,162,97,63,161,19,230,204,156,186,134,142,46,212,83,218,246,177,199,88,9,141,118,65,24,38,55,107,29,89,168,23,59,120,134,98,241,
109,160,41,137,199,16,244,88,83,200,113,247,153,18,133,181,7,137,173,99,15,175,220,215,228,149,101,214,48,103,8,110,66,142,64,86,67,182,120,216,195,46,70,32,102,32,154,166,109,188,209,162,211,199,81,166,214,14,229,30,122,181,128,34,201,224,29,98,244,
11,172,13,24,218,151,232,231,51,100,104,29,244,78,42,23,134,213,209,4,173,157,239,96,71,185,142,138,29,148,167,185,24,150,186,250,214,153,178,227,134,158,25,175,38,217,98,220,169,181,38,239,19,218,50,186,58,140,183,133,158,204,109,52,152,109,150,34,129,
84,101,82,72,191,9,21,27,215,76,4,13,233,43,163,209,75,144,218,32,16,146,66,248,129,173,84,209,197,115,235,195,103,236,176,181,65,65,108,23,17,73,143,179,233,106,34,224,177,114,236,98,29,190,58,42,189,67,121,79,219,120,218,70,175,153,8,161,110,69,65,
19,106,103,237,176,237,47,248,118,165,128,163,64,49,100,200,18,28,111,223,162,211,82,60,100,247,1,173,210,179,36,124,83,117,103,105,8,217,143,160,130,160,34,33,122,160,30,121,27,219,0,161,22,53,94,133,25,221,128,78,178,211,186,139,13,169,15,213,52,252,
180,172,214,178,250,84,229,155,215,234,211,62,71,5,42,132,203,147,113,119,183,174,80,113,5,178,38,65,17,91,100,19,122,183,77,200,115,229,37,177,247,92,102,66,62,194,162,136,173,26,38,75,44,52,99,5,170,182,67,251,209,47,63,165,202,190,191,18,133,189,222,
220,217,129,184,66,1,110,67,67,49,93,86,204,248,26,100,21,43,52,136,112,178,44,249,171,118,134,158,146,0,183,126,218,249,205,183,201,231,109,30,190,49,105,245,139,235,207,44,109,247,55,231,15,158,247,180,62,165,235,46,247,150,108,27,84,46,58,31,220,255,
54,112,247,115,228,191,15,220,253,28,249,239,3,119,63,71,254,251,192,221,43,148,63,6,238,94,161,252,49,112,247,10,229,143,129,187,87,40,127,12,220,189,66,249,99,224,238,21,202,31,3,119,175,80,254,24,184,123,133,242,199,192,221,247,145,87,22,44,221,232,
37,35,51,118,88,88,195,176,151,238,214,196,68,20,27,43,173,210,69,50,139,204,129,126,200,61,57,105,88,203,228,202,144,47,182,182,1,86,161,221,77,42,173,120,107,221,25,235,32,118,113,65,10,58,80,71,63,232,158,250,26,162,25,59,188,40,213,205,33,181,98,
253,219,62,176,145,20,236,72,199,196,158,31,75,184,193,39,219,137,134,189,227,245,87,179,178,167,181,167,163,0,123,227,43,116,231,101,17,214,74,244,217,237,27,182,249,46,188,108,219,63,77,92,88,67,13,104,62,106,73,151,58,172,33,8,186,214,110,81,205,163,
241,46,23,125,209,199,98,251,157,255,175,238,221,223,249,255,234,222,253,228,127,118,232,21,144,129,30,124,9,29,74,144,70,187,134,248,42,19,108,191,207,228,113,109,205,14,6,161,19,210,186,10,209,119,232,161,113,149,36,122,62,18,174,104,156,187,162,177,
19,7,85,86,148,40,29,208,111,252,183,138,30,13,68,218,198,161,56,84,67,153,32,175,216,124,98,4,226,52,177,178,21,91,105,40,130,172,197,30,3,132,178,164,146,223,143,132,74,130,56,200,57,56,83,68,24,223,178,101,98,21,61,2,6,82,163,238,156,200,106,199,209,
130,42,232,215,52,74,214,24,175,113,115,181,61,14,242,56,240,65,244,199,65,15,99,250,81,143,105,210,178,155,21,250,3,122,16,66,107,198,205,206,238,245,29,234,229,74,54,196,33,234,221,144,214,43,153,246,255,45,107,61,196,110,235,197,67,244,123,210,34,
252,206,35,236,126,15,97,58,86,173,33,213,84,247,211,10,50,42,240,227,156,61,228,88,73,52,139,95,240,3,110,182,238,187,57,119,223,122,151,128,217,106,165,25,202,240,253,128,191,176,75,216,79,113,114,105,10,57,172,136,113,238,10,115,70,50,97,46,222,70,
154,38,186,101,235,140,121,30,112,76,173,245,108,202,93,245,242,186,41,119,21,254,235,166,220,92,239,49,229,110,227,94,53,229,62,242,254,154,41,247,72,225,43,166,220,115,53,252,189,41,247,185,176,254,206,20,118,71,231,193,230,126,174,137,165,200,158,
108,158,231,154,105,149,164,20,25,139,21,230,84,25,104,30,182,93,139,25,11,86,65,3,169,75,80,253,221,254,231,112,137,184,60,6,14,216,162,236,156,177,61,251,13,165,225,223,199,81,251,196,78,50,247,235,106,73,176,93,38,175,182,93,99,25,85,232,246,228,108,
47,230,125,162,87,143,223,27,162,146,174,213,70,182,215,130,13,73,108,35,60,3,189,3,214,89,177,176,253,31,202,238,59,172,165,223,41,30,0,0,1,133,105,67,67,80,73,67,67,32,112,114,111,102,105,108,101,0,0,120,156,125,145,61,72,195,64,24,134,223,254,72,69,
43,14,118,16,21,204,80,157,44,136,138,56,106,21,138,80,33,212,10,173,58,152,92,250,7,77,26,146,20,23,71,193,181,224,224,207,98,213,193,197,89,87,7,87,65,16,252,1,113,116,114,82,116,145,18,191,75,10,45,98,188,227,184,135,247,190,247,229,238,59,192,95,
47,51,213,12,142,3,170,102,25,169,68,92,200,100,87,133,208,43,130,24,68,55,205,97,137,153,250,156,40,38,225,57,190,238,225,227,251,93,140,103,121,215,253,57,122,148,156,201,0,159,64,60,203,116,195,34,222,32,158,222,180,116,206,251,196,17,86,148,20,226,
115,226,49,131,46,72,252,200,117,217,229,55,206,5,135,253,60,51,98,164,83,243,196,17,98,161,208,198,114,27,179,162,161,18,79,17,71,21,85,163,124,127,198,101,133,243,22,103,181,92,101,205,123,242,23,134,115,218,202,50,215,105,13,33,129,69,44,65,132,0,
25,85,148,80,134,133,24,237,26,41,38,82,116,30,247,240,15,56,126,145,92,50,185,74,96,228,88,64,5,42,36,199,15,254,7,191,123,107,230,39,39,220,164,112,28,232,120,177,237,143,17,32,180,11,52,106,182,253,125,108,219,141,19,32,240,12,92,105,45,127,165,14,
204,124,146,94,107,105,209,35,160,119,27,184,184,110,105,242,30,112,185,3,244,63,233,146,33,57,82,128,150,63,159,7,222,207,232,155,178,64,223,45,208,181,230,246,173,121,142,211,7,32,77,189,74,222,0,7,135,192,104,129,178,215,61,222,221,217,222,183,127,
107,154,253,251,1,65,53,114,147,234,239,254,115,0,0,13,28,105,84,88,116,88,77,76,58,99,111,109,46,97,100,111,98,101,46,120,109,112,0,0,0,0,0,60,63,120,112,97,99,107,101,116,32,98,101,103,105,110,61,34,239,187,191,34,32,105,100,61,34,87,53,77,48,77,112,
67,101,104,105,72,122,114,101,83,122,78,84,99,122,107,99,57,100,34,63,62,10,60,120,58,120,109,112,109,101,116,97,32,120,109,108,110,115,58,120,61,34,97,100,111,98,101,58,110,115,58,109,101,116,97,47,34,32,120,58,120,109,112,116,107,61,34,88,77,80,32,
67,111,114,101,32,52,46,52,46,48,45,69,120,105,118,50,34,62,10,32,60,114,100,102,58,82,68,70,32,120,109,108,110,115,58,114,100,102,61,34,104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,49,57,57,57,47,48,50,47,50,50,45,114,100,102,45,
115,121,110,116,97,120,45,110,115,35,34,62,10,32,32,60,114,100,102,58,68,101,115,99,114,105,112,116,105,111,110,32,114,100,102,58,97,98,111,117,116,61,34,34,10,32,32,32,32,120,109,108,110,115,58,120,109,112,77,77,61,34,104,116,116,112,58,47,47,110,115,
46,97,100,111,98,101,46,99,111,109,47,120,97,112,47,49,46,48,47,109,109,47,34,10,32,32,32,32,120,109,108,110,115,58,115,116,69,118,116,61,34,104,116,116,112,58,47,47,110,115,46,97,100,111,98,101,46,99,111,109,47,120,97,112,47,49,46,48,47,115,84,121,112,
101,47,82,101,115,111,117,114,99,101,69,118,101,110,116,35,34,10,32,32,32,32,120,109,108,110,115,58,100,99,61,34,104,116,116,112,58,47,47,112,117,114,108,46,111,114,103,47,100,99,47,101,108,101,109,101,110,116,115,47,49,46,49,47,34,10,32,32,32,32,120,
109,108,110,115,58,71,73,77,80,61,34,104,116,116,112,58,47,47,119,119,119,46,103,105,109,112,46,111,114,103,47,120,109,112,47,34,10,32,32,32,32,120,109,108,110,115,58,116,105,102,102,61,34,104,116,116,112,58,47,47,110,115,46,97,100,111,98,101,46,99,111,
109,47,116,105,102,102,47,49,46,48,47,34,10,32,32,32,32,120,109,108,110,115,58,120,109,112,61,34,104,116,116,112,58,47,47,110,115,46,97,100,111,98,101,46,99,111,109,47,120,97,112,47,49,46,48,47,34,10,32,32,32,120,109,112,77,77,58,68,111,99,117,109,101,
110,116,73,68,61,34,103,105,109,112,58,100,111,99,105,100,58,103,105,109,112,58,102,48,98,48,52,57,101,101,45,101,57,99,49,45,52,99,102,48,45,56,97,50,102,45,54,49,101,102,49,48,97,57,53,52,48,101,34,10,32,32,32,120,109,112,77,77,58,73,110,115,116,97,
110,99,101,73,68,61,34,120,109,112,46,105,105,100,58,54,97,52,100,48,98,54,102,45,97,48,48,48,45,52,99,97,99,45,97,54,101,49,45,50,97,57,54,48,101,102,51,52,52,101,50,34,10,32,32,32,120,109,112,77,77,58,79,114,105,103,105,110,97,108,68,111,99,117,109,
101,110,116,73,68,61,34,120,109,112,46,100,105,100,58,99,98,53,100,97,54,56,100,45,100,102,49,53,45,52,53,49,49,45,97,97,56,101,45,100,56,51,102,50,54,50,56,101,52,99,54,34,10,32,32,32,100,99,58,70,111,114,109,97,116,61,34,105,109,97,103,101,47,112,110,
103,34,10,32,32,32,71,73,77,80,58,65,80,73,61,34,50,46,48,34,10,32,32,32,71,73,77,80,58,80,108,97,116,102,111,114,109,61,34,77,97,99,32,79,83,34,10,32,32,32,71,73,77,80,58,84,105,109,101,83,116,97,109,112,61,34,49,54,53,49,48,53,56,50,53,50,48,50,49,
49,50,48,34,10,32,32,32,71,73,77,80,58,86,101,114,115,105,111,110,61,34,50,46,49,48,46,51,48,34,10,32,32,32,116,105,102,102,58,79,114,105,101,110,116,97,116,105,111,110,61,34,49,34,10,32,32,32,120,109,112,58,67,114,101,97,116,111,114,84,111,111,108,61,
34,71,73,77,80,32,50,46,49,48,34,62,10,32,32,32,60,120,109,112,77,77,58,72,105,115,116,111,114,121,62,10,32,32,32,32,60,114,100,102,58,83,101,113,62,10,32,32,32,32,32,60,114,100,102,58,108,105,10,32,32,32,32,32,32,115,116,69,118,116,58,97,99,116,105,
111,110,61,34,115,97,118,101,100,34,10,32,32,32,32,32,32,115,116,69,118,116,58,99,104,97,110,103,101,100,61,34,47,34,10,32,32,32,32,32,32,115,116,69,118,116,58,105,110,115,116,97,110,99,101,73,68,61,34,120,109,112,46,105,105,100,58,99,55,56,53,102,54,
48,102,45,52,51,55,101,45,52,55,98,102,45,56,102,54,101,45,102,52,98,98,100,53,102,48,50,53,55,55,34,10,32,32,32,32,32,32,115,116,69,118,116,58,115,111,102,116,119,97,114,101,65,103,101,110,116,61,34,71,105,109,112,32,50,46,49,48,32,40,77,97,99,32,79,
83,41,34,10,32,32,32,32,32,32,115,116,69,118,116,58,119,104,101,110,61,34,50,48,50,50,45,48,52,45,50,55,84,49,51,58,49,55,58,51,50,43,48,50,58,48,48,34,47,62,10,32,32,32,32,60,47,114,100,102,58,83,101,113,62,10,32,32,32,60,47,120,109,112,77,77,58,72,
105,115,116,111,114,121,62,10,32,32,60,47,114,100,102,58,68,101,115,99,114,105,112,116,105,111,110,62,10,32,60,47,114,100,102,58,82,68,70,62,10,60,47,120,58,120,109,112,109,101,116,97,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,10,60,63,120,112,97,99,107,101,116,32,101,110,100,61,34,119,34,63,62,6,228,66,153,0,0,0,6,98,75,71,68,0,0,0,0,0,0,249,67,187,127,0,0,0,9,112,72,89,115,0,0,46,35,0,0,46,35,1,120,165,63,118,0,0,0,7,116,73,77,69,7,230,4,
27,11,17,32,26,179,200,88,0,0,0,25,116,69,88,116,67,111,109,109,101,110,116,0,67,114,101,97,116,101,100,32,119,105,116,104,32,71,73,77,80,87,129,14,23,0,0,0,25,73,68,65,84,40,207,99,236,237,237,253,207,48,10,134,51,96,68,230,140,198,247,176,4,0,225,114,
5,79,189,247,50,19,0,0,0,0,73,69,78,68,174,66,96,130,0,0 };

const char* scrollImage_png = (const char*) temp_binary_data_17;

//================== superCardioidPatternIcon.svg ==================
static const unsigned char temp_binary_data_18[] =
"<svg width=\"18\" height=\"21\" viewBox=\"0 0 18 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<path d=\"M5.46979 15.272L5.73857 14.5295C5.81456 14.3196 5.73361 14.0851 5.5443 13.9668L2.74284 12.2159C1.72551 11.58 1.02332 10.5448 0.808715 9.36449C0.308643 6.6141 1.68384 3.8637 4.1842 2.61353L5.62774 1.89176C7.97338 0.718937 10.7635 0.869316 12"
".9695 2.28746L13.5965 2.69053C16.0125 4.24368 17.1083 7.20873 16.283 9.95976C16.0369 10.7802 15.5548 11.51 14.8968 12.0583L12.6148 13.96C12.4623 14.087 12.4008 14.293 12.4586 14.4828L12.6914 15.2474C13.196 16.9047 12.5395 18.6956 11.0835 19.6342L11.0"
"068 19.6836C9.76523 20.484 8.1686 20.4777 6.93342 19.6674C5.48636 18.7181 4.8807 16.8993 5.46979 15.272Z\" stroke=\"white\"/>\n"
"</svg>\n";

const char* superCardioidPatternIcon_svg = (const char*) temp_binary_data_18;

//================== terminateSpillIcon.svg ==================
static const unsigned char temp_binary_data_19[] =
"<svg width=\"18\" height=\"19\" viewBox=\"0 0 18 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<circle cx=\"8.75122\" cy=\"9.71509\" r=\"8.20442\" stroke=\"white\" stroke-width=\"1.0936\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.55108 5.52476C5.34259 5.30629 4.99646 5.29821 4.778 5.5067C4.55953 5.71519 4.55144 6.06131 4.75994 6.27978L8.0165 9.69214L4.59059 13.1429C4.37782 13.3572 4.37907 13.7034 4.59338 13.9162C4.80768"
" 14.1289 5.1539 14.1277 5.36666 13.9134L8.7718 10.4836L11.956 13.8201C12.1645 14.0386 12.5106 14.0467 12.7291 13.8382C12.9476 13.6297 12.9556 13.2836 12.7472 13.0651L9.54258 9.70721L12.9118 6.3136C13.1246 6.09929 13.1233 5.75308 12.909 5.54031C12.694"
"7 5.32755 12.3485 5.3288 12.1357 5.5431L8.78728 8.91578L5.55108 5.52476Z\" fill=\"white\"/>\n"
"</svg>\n";

const char* terminateSpillIcon_svg = (const char*) temp_binary_data_19;

//================== undoPresetIcon.svg ==================
static const unsigned char temp_binary_data_20[] =
"<svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.7489 0.251051C12.0837 0.585786 12.0837 1.1285 11.7489 1.46323L1.46323 11.7489C1.1285 12.0837 0.585786 12.0837 0.251051 11.7489C-0.0836838 11.4142 -0.0836838 10.8715 0.251051 10.5368L10.5368 0."
"251051C10.8715 -0.0836838 11.4142 -0.0836838 11.7489 0.251051Z\" fill=\"white\"/>\n"
"<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.251051 0.251051C0.585786 -0.0836838 1.1285 -0.0836838 1.46323 0.251051L11.7489 10.5368C12.0837 10.8715 12.0837 11.4142 11.7489 11.7489C11.4142 12.0837 10.8715 12.0837 10.5368 11.7489L0.251051 1"
".46323C-0.0836838 1.1285 -0.0836838 0.585786 0.251051 0.251051Z\" fill=\"white\"/>\n"
"</svg>\n";

const char* undoPresetIcon_svg = (const char*) temp_binary_data_20;


const char* getNamedResource (const char* resourceNameUTF8, int& numBytes);
const char* getNamedResource (const char* resourceNameUTF8, int& numBytes)
{
    unsigned int hash = 0;

    if (resourceNameUTF8 != nullptr)
        while (*resourceNameUTF8 != 0)
            hash = 31 * hash + (unsigned int) *resourceNameUTF8++;

    switch (hash)
    {
        case 0xd7c9008d:  numBytes = 19242; return austrianAudioLogo_svg;
        case 0xaf268cf8:  numBytes = 930; return bandHandleKnob_svg;
        case 0x0a112e7b:  numBytes = 509; return bCardioidPatternIcon_svg;
        case 0xd7aba53d:  numBytes = 563; return cardioidPatternIcon_svg;
        case 0x1d7dc8f3:  numBytes = 302; return closePresetListIcon_svg;
        case 0x8953505d:  numBytes = 1820; return diffuseField_svg;
        case 0x1d3b1cbf:  numBytes = 939; return eightPatternIcon_svg;
        case 0xf47e50fc:  numBytes = 577; return eqFieldCheckSign_svg;
        case 0x9e083a65:  numBytes = 2140; return eyeDrop_svg;
        case 0x57650493:  numBytes = 990; return freeField_svg;
        case 0xac88c531:  numBytes = 720; return hyperCardioidPatternIcon_svg;
        case 0x06f5b2e8:  numBytes = 510; return loadArrow_svg;
        case 0xefecd43b:  numBytes = 1625; return maximizeTargetIcon_svg;
        case 0xb73e125a:  numBytes = 747; return maxTargetToSpillIcon_svg;
        case 0x5a81cbf5:  numBytes = 166; return omniPatternIcon_svg;
        case 0xb8fa123e:  numBytes = 520; return revBCardioidPatternIcon_svg;
        case 0xb405bd1a:  numBytes = 565; return revCardioidPatternIcon_svg;
        case 0x654bf4f8:  numBytes = 6211; return scrollImage_png;
        case 0x203fd342:  numBytes = 725; return superCardioidPatternIcon_svg;
        case 0x71526509:  numBytes = 772; return terminateSpillIcon_svg;
        case 0xb22183a1:  numBytes = 752; return undoPresetIcon_svg;
        default: break;
    }

    numBytes = 0;
    return nullptr;
}

const char* namedResourceList[] =
{
    "austrianAudioLogo_svg",
    "bandHandleKnob_svg",
    "bCardioidPatternIcon_svg",
    "cardioidPatternIcon_svg",
    "closePresetListIcon_svg",
    "diffuseField_svg",
    "eightPatternIcon_svg",
    "eqFieldCheckSign_svg",
    "eyeDrop_svg",
    "freeField_svg",
    "hyperCardioidPatternIcon_svg",
    "loadArrow_svg",
    "maximizeTargetIcon_svg",
    "maxTargetToSpillIcon_svg",
    "omniPatternIcon_svg",
    "revBCardioidPatternIcon_svg",
    "revCardioidPatternIcon_svg",
    "scrollImage_png",
    "superCardioidPatternIcon_svg",
    "terminateSpillIcon_svg",
    "undoPresetIcon_svg"
};

const char* originalFilenames[] =
{
    "austrianAudioLogo.svg",
    "bandHandleKnob.svg",
    "bCardioidPatternIcon.svg",
    "cardioidPatternIcon.svg",
    "closePresetListIcon.svg",
    "diffuseField.svg",
    "eightPatternIcon.svg",
    "eqFieldCheckSign.svg",
    "eyeDrop.svg",
    "freeField.svg",
    "hyperCardioidPatternIcon.svg",
    "loadArrow.svg",
    "maximizeTargetIcon.svg",
    "maxTargetToSpillIcon.svg",
    "omniPatternIcon.svg",
    "revBCardioidPatternIcon.svg",
    "revCardioidPatternIcon.svg",
    "scrollImage.png",
    "superCardioidPatternIcon.svg",
    "terminateSpillIcon.svg",
    "undoPresetIcon.svg"
};

const char* getNamedResourceOriginalFilename (const char* resourceNameUTF8);
const char* getNamedResourceOriginalFilename (const char* resourceNameUTF8)
{
    for (unsigned int i = 0; i < (sizeof (namedResourceList) / sizeof (namedResourceList[0])); ++i)
        if (strcmp (namedResourceList[i], resourceNameUTF8) == 0)
            return originalFilenames[i];

    return nullptr;
}

}
